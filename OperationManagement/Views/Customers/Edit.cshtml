@using OperationManagement.Data.Enums
@model OperationManagement.Models.Customer

@{
    ViewData["Title"] = "Edit";
}

<div class="text-center">
    <h1>Edit</h1>
    <form asp-action="Edit">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="@Model.EnterpriseId" />
        <div class="row">
            <div class="col-md-6">
                <!-- Customer Information Section -->
                <h4>Customer</h4>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NationalId" class="control-label"></label>
                    <input asp-for="NationalId" class="form-control" />
                    <span asp-validation-for="NationalId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Nationality" class="control-label"></label>
                    <select asp-for="Nationality" class="form-control">
                        <option value="">Select Nationality</option>
                        @foreach (var country in Enum.GetValues(typeof(NationalityEnum)))
                        {
                            <option value="@country">@country</option>
                        }
                    </select>
                    <span asp-validation-for="Nationality" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Gender" class="control-label"></label>
                    <select asp-for="Gender" class="form-control">
                        <option value="">Select Gender</option>
                        @foreach (var gender in Enum.GetValues(typeof(Gender)))
                        {
                            <option value="@gender">@gender</option>
                        }
                    </select>
                    <span asp-validation-for="Gender" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="BirthDate" class="control-label"></label>
                    <input asp-for="BirthDate" class="form-control" />
                    <span asp-validation-for="BirthDate" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <!-- Contacts Section -->
                <h4>Contacts</h4>
                <hr />
                <div id="contact-container">
                    @for (int i = 0; i < Model.Contacts.Count; i++)
                    {
                        <div class="row contact-row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label asp-for="Contacts[i].Type" class="control-label"></label>
                                    <select asp-for="Contacts[i].Type" class="form-control">
                                        <option value="">Select Contact Type</option>
                                        @foreach (var contactType in Enum.GetValues(typeof(ContactType)))
                                        {
                                            <option value="@contactType">@contactType</option>
                                        }
                                    </select>
                                    <span asp-validation-for="Contacts[i].Type" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label asp-for="Contacts[i].Value" class="control-label"></label>
                                    <input asp-for="Contacts[i].Value" class="form-control" />
                                    <span asp-validation-for="Contacts[i].Value" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-danger btn-sm" onclick="removeContact(this)">Remove</button>
                            </div>
                        </div>
                    }
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-primary mt-3" onclick="addContact()">Add Contact</button>
                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Update" class="btn btn-primary mt-3" onclick="confirmFormSubmission()" />
        </div>
    </form>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function addContact() {
            var container = $('#contact-container');
            var index = container.find('.contact-row').length;
            var html = `
                        <div class="row contact-row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label asp-for="Contacts[${index}].Type" class="control-label"></label>
                                    <select asp-for="Contacts[${index}].Type" class="form-control">
                                        <option value="">Select Contact Type</option>
        @foreach (var contactType in Enum.GetValues(typeof(ContactType)))
        {
                                                <option value="@contactType">@contactType</option>
        }
                                    </select>
                                    <span asp-validation-for="Contacts[${index}].Type" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label asp-for="Contacts[${index}].Value" class="control-label"></label>
                                    <input asp-for="Contacts[${index}].Value" class="form-control" />
                                    <span asp-validation-for="Contacts[${index}].Value" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-danger btn-sm" onclick="removeContact(this)">Remove</button>
                            </div>
                        </div>`;
            container.append(html);

            // Update contact indices
            updateContactIndices();
        }

        function removeContact(button) {
            var contactRow = $(button).closest('.contact-row');
            if (confirm(`Are you sure you want to remove the contact?`)) {
                contactRow.remove();
                // Update contact indices
                updateContactIndices();
            }
        }

        function updateContactIndices() {
            var contacts = $('.contact-row');
            contacts.each(function (index) {
                var row = $(this);
                var contactTypeSelect = row.find('select');
                var contactValueInput = row.find('input');
                var typeLabel = row.find('label[for]');
                var typeValidationMsg = row.find('span[data-valmsg-for]');

                var newIndex = `[${index}]`;
                contactTypeSelect.attr('name', `Contacts${newIndex}.Type`);
                contactTypeSelect.attr('data-val-for', `Contacts${newIndex}.Type`);
                contactValueInput.attr('name', `Contacts${newIndex}.Value`);
                contactValueInput.attr('data-val-for', `Contacts${newIndex}.Value`);
                typeLabel.attr('for', `Contacts${newIndex}.Type`);
                typeValidationMsg.attr('data-valmsg-for', `Contacts${newIndex}.Type`);

                // Update the asp-for attribute
                contactTypeSelect.attr('asp-for', `Contacts${newIndex}.Type`);
                contactValueInput.attr('asp-for', `Contacts${newIndex}.Value`);
            });
        }
        function confirmFormSubmission() {
            // Display a confirmation dialog
            if (confirm("Are you sure you want to update this user?")) {
                // Proceed with form submission
                $("form").submit();
            }
        }
    </script>
}
